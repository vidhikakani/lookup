version: "3.9"
services:
    postgres:
        container_name: "lookup-postgres"
        image: postgres
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s
        environment:
            POSTGRES_USER: lookup
            POSTGRES_PASSWORD: lookup
            POSTGRES_DB: lookup
        ports:
            - "5432:5432"
        volumes:
            - ./pgdata:/var/lib/postgresql/data

    mongodb:
        container_name: "lookup-mongodb"
        image: mongo
        restart: unless-stopped
        environment:
            - MONGO_INITDB_DATABASE=lookup
            - MONGO_INITDB_ROOT_USERNAME=lookup
            - MONGO_INITDB_ROOT_PASSWORD=lookup
        ports:
            - "27017:27017"
        volumes:
            - ./mongodata:/data/db

    neo4j:
        container_name: "lookup-neo4j"
        image: neo4j:latest
        restart: unless-stopped
        ports:
            - 7474:7474
            - 7687:7687
        volumes:
            - ./neo4j/conf:/conf
            - ./neo4j/data:/data
            - ./neo4j/import:/import
            - ./neo4j/logs:/logs
            - ./neo4j/plugins:/plugins
        environment:
            - NEO4J_dbms_memory_pagecache_size=1G
            - NEO4J_dbms.memory.heap.initial_size=1G
            - NEO4J_dbms_memory_heap_max__size=1G

    mongo_admin:
        image: mongo-express
        container_name: "lookup-mongo-admin"
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=lookup
            - ME_CONFIG_MONGODB_ADMINPASSWORD=lookup
            - ME_CONFIG_MONGODB_SERVER=lookup-mongodb
            - ME_CONFIG_BASICAUTH_USERNAME=lookup
            - ME_CONFIG_BASICAUTH_PASSWORD=lookup
        depends_on:
            - mongodb
        links:
            - mongodb
        ports:
            - "8081:8081"
        restart: always

    jupyter:
        build:
            context: ./jupyter
            dockerfile: Dockerfile
        volumes:
            - ./jupyter:/usr/app/lookup/jupyter
        ports:
            - 8888:8888
        container_name: lookup-jupyter
        depends_on:
            - mongodb
            - neo4j
            - postgres
        links:
            - mongodb
            - neo4j
            - postgres

    server:
        container_name: "lookup-server"
        depends_on:
            - neo4j
            - postgres
            - mongodb
        build:
            context: ./server
            dockerfile: Dockerfile
        ports:
            - "8000:8000"
        restart: unless-stopped
        volumes:
            - ./server:/usr/app/lookup/server
            - /usr/app/lookup/server/node_modules
        environment:
            PORT: 8000
            DB_SCHEMA: lookup
            DB_USER: lookup
            DB_PASSWORD: lookup
            DB_HOST: postgres
            DB_NAME: lookup

    # go:
    #     container_name: "lookup-go"
    #     depends_on:
    #         - mongodb
    #     build:
    #         context: ./go
    #         dockerfile: Dockerfile
    #     ports:
    #         - "8080:8080"
    #     restart: always
    #     volumes:
    #         - ./go:/usr/app/lookup/go

    client:
        container_name: "lookup-ui"
        depends_on:
            - server
        build:
            context: ./client
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - "3000:3000"
        volumes:
            - ./client:/usr/app/lookup/client
            - /usr/app/lookup/client/node_modules
        environment:
            PORT: 3000
            CHOKIDAR_USEPOLLING: "true"

